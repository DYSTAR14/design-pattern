L :- Liskov Substitution Principle (LSP)
	Def : Objects of a superclass should be replaceable with objects of a subclass without affecting the correctness of the program.
	Ex : Without changing functionality of superclass, By adding different features of subclass
	The LSP ensures that derived classes extend the base classes without changing their behavior. This principle helps in making sure that a subclass can stand in for its superclass without causing errors.
```
// Before applying LSP
class Bird {
    public void fly() {
        // Fly logic
    }
}

class Ostrich extends Bird {
    @Override
    public void fly() {
        throw new UnsupportedOperationException("Ostrich can't fly");
    }
}

// After applying LSP
abstract class Bird {
    public abstract void move();
}

class Sparrow extends Bird {
    @Override
    public void move() {
        fly();
    }

    private void fly() {
        // Fly logic
    }
}

class Ostrich extends Bird {
    @Override
    public void move() {
        run();
    }

    private void run() {
        // Run logic
    }
}
```